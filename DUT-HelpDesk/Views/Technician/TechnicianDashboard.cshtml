@using DUT_HelpDesk.Controllers;
@model List<DUT_HelpDesk.DatabaseModels.Ticket>
@{
    ViewData["Title"] = "Technician";
    string[] tickets = new string[3];
}

<div>
    <h1>Assigned Tickets</h1>
    <br />
    <table class="table table-responsive table-hover">
        <tr>
            <th>Id</th>
            <th>Subject</th>
            <th>Date Created</th>
            <th>Priority</th>
            <th>Status</th>
            <th>Technicians</th>
            <th></th>
            <th></th>
        </tr>
        @foreach (var item in Model)
        {
            @if (item != null)
            {
                var ticketStatus = StateManager.GetTicketStatus(item.TicketId);
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.TicketId)</td>
                    <td>@Html.DisplayFor(modelItem => item.Subject)</td>
                    <td>@string.Format("{0:dd, MMM yyyy - HH:mm}", item.DateCreated)</td>
                    @if (item.Priority.Equals("Low"))
                    {
                        <td>
                            <span style="background-color: #00c20d; color: white; padding: 4px 8px; border-radius: 10px;">
                                @Html.DisplayTextFor(model => item.Priority)
                            </span>
                        </td>
                    }
                    @if (item.Priority.Equals("Normal"))
                    {
                        <td>
                            <span style="background-color: darkorange; color: white; padding: 4px 8px; border-radius: 10px;">
                                @Html.DisplayTextFor(model => item.Priority)
                            </span>
                        </td>
                    }
                    @if (item.Priority.Equals("High"))
                    {
                        <td>
                            <span style="background-color: red; color: white; padding: 4px 8px; border-radius: 10px;">
                                @Html.DisplayTextFor(model => item.Priority)
                            </span>
                        </td>
                    }
                    <td>@ticketStatus</td>
                    @if (item.TechnicianCount == null)
                    {
                        <td>@Html.DisplayName("0")</td>
                    }
                    else
                    {
                        <td>@Html.DisplayFor(modelItem => item.TechnicianCount)</td>
                    }                   
                    
                    @{
                        if (ticketStatus != "Closed")
                        {
                            <td>@Html.ActionLink("Handle", "TechnicianDashboardDetail", "Technician", new { id=item.TicketId },  new { style = "color: #00c20d;" })</td>
                            <td>@Html.ActionLink("Unaccept", "UnAssignTicketToTechnician", "Technician", new { id=item.TicketId, techId=ViewBag.technician.TechnicianId }, new { style = "color: #f00;" })</td>
                        }
                        else{
                            <td>@Html.ActionLink("Details", "TechnicianDashboardDetail", "Technician", new { id=item.TicketId }, null)</td>
                            <td></td>
                        }
                     }
                </tr>
            }
        }
    </table>
</div>



