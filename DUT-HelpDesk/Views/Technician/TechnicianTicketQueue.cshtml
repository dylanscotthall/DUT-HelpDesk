@using DUT_HelpDesk.Controllers;
@model List<DUT_HelpDesk.DatabaseModels.Ticket>
@{
    ViewData["Title"] = "Technician Ticket Queue";
    string[] tickets = new string[3];
}

@section scripts{
    <script>
        function SetSort(dropdown, startDate, endDate, status) {

            window.location.href = "/Technician/TechnicianTicketQueue?sortBy=" + dropdown + "&startDate=" + startDate + "&endDate=" + endDate + "&status=" + status;

        }
    </script>
    }

    <style>
    @@media print {
        .hide-in-print {
            display: none;
        }
    }
</style>

<div>
    <h1>Ticket Queue</h1>
    <br />
    <div class="hide-in-print">
    @Html.DropDownList("Sortby", new SelectListItem[] { new SelectListItem()
    { Text = "Date", Value = "Date" }, new SelectListItem()
    { Text = "Date Down", Value = "Date Down" }, new SelectListItem()
    { Text = "Alpha", Value = "Alpha"}}, new {style="width:15%;display:inline;height:37px;border-color:lightgrey;border-radius:3px"})
    @if (ViewBag.startDate != null)
    {
        <input style="width:15%;display:inline;" id="startDate" class="form-control" @*onchange="SetSort(this.value)"*@ type="date" value="@ViewBag.startDate" />
    }
    else
    {
        <input style="width:15%;display:inline;" id="startDate" class="form-control" @*onchange="SetSort(this.value)"*@ type="date" />
    }
    @if (ViewBag.endDate != null)
    {
        <input style="width:15%;display:inline;" id="endDate" class="form-control col-sm-5" @*onchange="SetSort(startDateId.value, endDateId.value)"*@ type="date" value="@ViewBag.endDate" />
    }
    else
    {
        <input style="width:15%;display:inline;" id="endDate" class="form-control col-sm-5" @*onchange="SetSort(startDateId.value, endDateId.value)"*@ type="date" @*value="@DateTime.Today.ToString("yyyy-MM-dd")"*@ />
    }
    @Html.DropDownList("Status", new SelectListItem[] { new SelectListItem()
    { Text = "Any Status", Value = "" }, new SelectListItem()
    { Text = "Available", Value = "Available" }, new SelectListItem()
    { Text = "Closed", Value = "Closed" }, new SelectListItem()
    { Text = "Active", Value = "Active" }}, new {style="width:15%;display:inline;height:37px;border-color:lightgrey;border-radius:3px"})
    <input style="width:15%;display:inline;" id="filter" class="form-control col-sm-5" type="button" value="Filter" onclick="SetSort(Sortby.value, startDate.value, endDate.value, Status.value)" />
    </div>
    <br />
    <br />
    <table class="table table-responsive table-hover">
        <tr>
            <th>Id</th>
            <th>Query</th>
            <th>Date Created</th>
            <th>Priority</th>
            <th>Status</th>
            <th>Technicians</th>
            <th class ="hide-in-print"></th>
            <th class="hide-in-print"></th>
        </tr>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                if (item != null)                  
                {
                    var ticketStatus = StateManager.GetTicketStatus(item.TicketId);
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.TicketId)</td>
                        <td>@Html.DisplayFor(modelItem => item.Subject)</td>
                        <td>@string.Format("{0:dd, MMM yyyy - HH:mm}", item.DateCreated)</td>
                        @if (item.Priority.Equals("Low"))
                        {
                            <td>
                                <span style="background-color: #00c20d; color: white; padding: 4px 8px; border-radius: 10px;">
                                    @Html.DisplayTextFor(model => item.Priority)
                                </span>
                            </td>
                        }
                        @if (item.Priority.Equals("Normal"))
                        {
                            <td>
                                <span style="background-color: darkorange; color: white; padding: 4px 8px; border-radius: 10px;">
                                    @Html.DisplayTextFor(model => item.Priority)
                                </span>
                            </td>
                        }
                        @if (item.Priority.Equals("High"))
                        {
                            <td>
                                <span style="background-color: red; color: white; padding: 4px 8px; border-radius: 10px;">
                                    @Html.DisplayTextFor(model => item.Priority)
                                </span>
                            </td>
                        }
                        <td>@ticketStatus</td>
                        @if (item.TechnicianCount == null)
                        {
                            <td>@Html.DisplayName("0")</td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(modelItem => item.TechnicianCount)</td>
                        }
                        <td class="hide-in-print">@Html.ActionLink("Details", "TechViewTicket", "Technician", new { id=item.TicketId }, null)</td>
                        @{
                            if(ticketStatus != "Closed")
                            {
                                if (item.TicketTechnicians.Where(x => x.TechnicianId == ViewBag.technician.TechnicianId && x.IsAssigned == true).FirstOrDefault() != null)
                                {
                                    <td class="hide-in-print">@Html.ActionLink("Unaccept", "UnassignTicketToTechnicianFromTicketQueue", "Technician", new { id=item.TicketId, techId=ViewBag.technician.TechnicianId }, new { style = "color: #f00;" })</td>
                                }
                                else
                                {
                                    <td class="hide-in-print">
                                        @Html.ActionLink("Accept", "AssignTicketToTechnician", "Technician", new { id = item.TicketId, techId = ViewBag.technician.TechnicianId }, new { style = "color: #00c20d;" })
                                    </td>
                                }
                            }
                            else
                            {
                                <td class="hide-in-print"></td>
                            }
                        }
                    </tr>
                }
            }
        }
    </table>
</div>



