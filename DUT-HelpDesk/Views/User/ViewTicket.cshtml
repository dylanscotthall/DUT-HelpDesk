@using DUT_HelpDesk.Controllers
@model DUT_HelpDesk.DatabaseModels.ReplyTicketViewModel

@{
    ViewBag.Title = "UserTicket";
}

<div>
    <p>
        <a href="javascript:void(0);" onclick="goBack()">Go Back</a>
    </p>
    @{
        bool closed = Model.isClosed ?? false;
        if (closed)
        {
            <p>
                <span style="color: red; text-align: center">This ticket has been closed and is in "view only" mode.</span>
            </p>
        }
    }
    <div style="background-color: #F1F1F1; padding: 10px; border-radius: 10px;">
        <h2>Ticket Details</h2>
        <table class="table">
            <tr>
                <th>Created By</th>
                <td>
                    @{
                        int? userId = Model.ticket.UserId;
                        User user = StateManager.GetUser(userId);
                        string? email = user.Email;
                    }
                    @email
                </td>
            </tr>
            <tr>
                <th>Open Date</th>
                <td>@string.Format("{0:dd, MMM yyyy - HH:mm}", Model.ticket.DateCreated)</td>
            </tr>
            <tr>
                <th>Priority</th>
                @if (Model.ticket.Priority.Equals("Low"))
                {
                    <td>
                        <span style="background-color: #00c20d; color: white; padding: 4px 8px; border-radius: 10px;">
                            @Html.DisplayTextFor(model => model.ticket.Priority)
                        </span>
                    </td>
                }
                @if (Model.ticket.Priority.Equals("Normal"))
                {
                    <td>
                        <span style="background-color: darkorange; color: white; padding: 4px 8px; border-radius: 10px;">
                            @Html.DisplayTextFor(model => model.ticket.Priority)
                        </span>
                    </td>
                }
                @if (Model.ticket.Priority.Equals("High"))
                {
                    <td>
                        <span style="background-color: red; color: white; padding: 4px 8px; border-radius: 10px;">
                            @Html.DisplayTextFor(model => model.ticket.Priority)
                        </span>
                    </td>
                }
            </tr>
            <tr>
                <th>Subject</th>
                <td>@Html.DisplayTextFor(model => model.ticket.Subject)</td>
            </tr>
            <tr>
                <th>Query</th>
                <td>@Html.DisplayTextFor(model => model.ticket.QueryBody)</td>
            </tr>

        </table>
        @{
            DUT_HelpDesk.DatabaseModels.DutHelpdeskdbContext db = new DUT_HelpDesk.DatabaseModels.DutHelpdeskdbContext();
            string id = Model.ticket.TicketId.ToString();
            var uploadedFile = db.Attachments.FirstOrDefault(f => f.TicketId == int.Parse(id));

            if (uploadedFile != null)
            {
                <div style="text-align: center;">
                    <a href="@Url.Action("ViewAttachment", "User", new { id = id })">Attachment</a>
                </div>
            }
        }
    </div>

    <br />

    <div style="background-color: #F1F1F1; padding: 10px; border-radius: 10px;">

        <h4>Replies</h4>
        <table class="table table-responsive table-hover">
            <tr>
                <th style="width: 15%;">Time</th>
                <th style="width: 20%;">From</th>
                <th style="width: 50%;">Message</th>
                <th style="width: 10%;"></th>
            </tr>
            @if (ViewBag.replies.Count > 0)
            {
                @foreach (Reply item in ViewBag.replies)
                {
                    <tr>
                        <td>@string.Format("{0:dd, MMM yyyy - HH:mm}", item.Date)</td>
                        @{
                            List<User> users = ViewBag.users;
                            for (int i = 0; i < users.Count; i++)
                            {
                                if (item.UserId == users[i].UserId)
                                {
                                    <td>@users[i].Email</td>
                                }
                            }
                        }
                        <td>@item.Message</td>
                        @{
                            var uploadedAtt = db.Attachments.FirstOrDefault(f => f.ReplyId == item.ReplyId);
                            if (uploadedAtt != null)
                            {
                                <td><a href="@Url.Action("ViewReplyAttachment", "User", new { id = item.ReplyId })">Attachment</a></td>
                            }
                            else
                            {
                                <td></td>
                            }
                        }
                    </tr>
                }
            }
            else
            {
                <td></td>
                <td></td>
                <td>There are no replies for this ticket. Add a reply below.</td>
                <td></td>
            }
        </table>
    </div>


    @{
        if (!closed)
        {
            <div style="width: 50%; background-color: #F1F1F1; padding: 10px; border-radius: 10px;">
                <form method="post" asp-action="MyReplies" enctype="multipart/form-data">
                    <div class="form-group" style="width: 100%;">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <label asp-for="Message"><h6>New Reply</h6></label>
                        <textarea asp-for="Message" class="form-control" maxlength="255"></textarea>
                        <span asp-validation-for="Message" class="text-danger"></span>
                    </div>
                    <input asp-for="id" type="hidden" value="@Model.ticket.TicketId" />

                    <div style="width: 100%; max-width: 600px;">
                        <div style="display: flex; justify-content: space-between;">
                            <div style="width: 49%;margin-top: 20px">
                                <input asp-for="file" class="form-control" />
                            </div>
                            <div style="width: 49%; text-align: right; margin-top: 20px">
                                <button style="width: 100px" type="submit" class="btn btn-primary">Send</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        }
        else 
        {
            <br />
            int ticketId = Model.ticket.TicketId;
            if (!StateManager.TicketHasFeedback(ticketId)) {
                <div style="width: 50%; background-color: #F1F1F1; padding: 10px; border-radius: 10px;">
                    <form method="post" asp-action="SubmitFeedback" enctype="multipart/form-data">
                    <div class="form-group" style="width: 100%;">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <h4>Feedback</h4>
                        <label asp-for="Comments"><h6>Comments</h6></label>
                        <textarea asp-for="Comments" class="form-control" maxlength="255"></textarea>
                        <span asp-validation-for="Comments" class="text-danger"></span>
                    </div>
                    <input asp-for="id" type="hidden" value="@Model.ticket.TicketId" />

                    <div style="width: 100%; max-width: 600px;">
                        <div style="display: flex; justify-content: space-between;">
                            <div style="width: 25%;margin-top: 15px">
                                <label for="Rating"><h6>Rating</h6></label>
                                <select class="form-control" asp-for="Rating">

                                    <option value="5">5 (Very Good)</option>
                                    <option value="4">4</option>
                                    <option value="3">3 (Ok)</option>
                                    <option value="2">2</option>
                                    <option value="1">1 (Bad)</option>
                                    
                                    
                                </select>
                                <span asp-validation-for="Rating" class="text-danger"></span>
                            </div>
                            <div style="width: 49%; text-align: right; margin-top: 45px">
                                <button style="width: 100px" type="submit" class="btn btn-primary">Submit</button>
                            </div>
                        </div>
                    </div>
                </form>
                </div>
            }
            else
            {
                <span>Thank you for your feedback!</span>
            }
        }
    }

    <br />
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script>
            function goBack() {
                window.history.back();
            }
        </script>
    }
}